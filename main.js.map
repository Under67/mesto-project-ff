{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/components.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/index.js","webpack://mesto-project-ff/./src/scripts/additional.js"],"sourcesContent":["const profileEdit = document.querySelector('.profile__edit-button');\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst popupAvatar = document.querySelector('.popup_type_edit-avatar')\r\nconst popups = document.querySelectorAll('.popup');\r\nconst profileAddCard = document.querySelector('.profile__add-button');\r\nconst popupCard = document.querySelector('.popup_type_new-card');\r\nconst popupPic = document.querySelector('.popup__image');\r\nconst popupImg = document.querySelector('.popup_type_image');\r\nconst popupCaption = document.querySelector('.popup__caption')\r\nconst formProfile = document.forms['edit-profile'];\r\nconst inputName = formProfile.name;\r\nconst inputDescription = formProfile.description;\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst formCard = document.forms['new-place'];\r\nconst inputCardName = formCard['place-name'];\r\nconst inputCardLink = formCard.link;\r\nconst formAvatar = document.forms.avatar;\r\nconst inputAvatar = formAvatar.link;\r\n\r\nexport {profileEdit, popupEdit, popups, profileAddCard, popupCard, popupImg, popupPic, popupCaption, inputName, inputDescription, profileTitle, profileDescription, formProfile, formCard, inputCardName, inputCardLink, profileImage, popupAvatar, formAvatar, inputAvatar }","function openModal(item) {\r\n  item.classList.add(\"popup_is-opened\");  \r\n  document.addEventListener('keydown', handleEscPress);\r\n}\r\n\r\nfunction handleEscPress(evt) {\r\n  if(evt.key === 'Escape') {\r\n    const popup = document.querySelector('.popup_is-opened');\r\n    closeModal(popup);\r\n  }\r\n}\r\n\r\nfunction closeModal(item) {\r\n  item.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', handleEscPress);\r\n}\r\n\r\nexport {openModal, closeModal}","const config = {\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/wff-cohort-38',\r\n  headers: {\r\n    authorization: 'a04ecdbf-246a-4f34-8cd7-a30ee351ba0c',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nfunction request(url, options) {\r\n  return fetch(`${config.baseUrl}` + url, options);\r\n}\r\n\r\nfunction getInfoProfile() {\r\n  return request('/users/me', { headers : config.headers })\r\n  .then(checkResponse);\r\n}\r\n\r\nfunction getInitialCards() {\r\n  return request('/cards', { headers : config.headers })\r\n  .then(checkResponse);\r\n}\r\n\r\nfunction patchUserProfile(profileName, profileAbout) {\r\n  return request('/users/me', {\r\n    method : 'PATCH',\r\n    headers : config.headers,\r\n    body : JSON.stringify({\r\n      name: profileName,\r\n      about: profileAbout\r\n    })\r\n  })\r\n  .then(checkResponse)\r\n}\r\n\r\nfunction postCard(cardName, cardLink) {\r\n  return request('/cards', {\r\n    method : 'POST',\r\n    headers : config.headers,\r\n    body : JSON.stringify({\r\n      name : cardName,\r\n      link : cardLink\r\n    })\r\n  })\r\n  .then(checkResponse)\r\n}\r\n\r\nfunction deleteCard(cardId) {\r\n  return request('/cards' + `/${cardId}`, {\r\n    method : 'DELETE',\r\n    headers : config.headers,\r\n  })\r\n  .then(checkResponse)\r\n}\r\n\r\nfunction setLikeCard (cardId) {\r\n  return request('/cards/likes' + `/${cardId}`, {\r\n    method : 'PUT',\r\n    headers : config.headers,\r\n  })\r\n  .then(checkResponse)\r\n}\r\n\r\nfunction deleteLikeCard (cardId) {\r\n  return request('/cards/likes' + `/${cardId}`, {\r\n    method : 'DELETE',\r\n    headers : config.headers,\r\n  })\r\n  .then(checkResponse)\r\n}\r\n\r\nfunction postAvatar (pic) {\r\n  return request('/users/me/avatar', {\r\n    method : 'PATCH',\r\n    headers : config.headers,\r\n    body : JSON.stringify({\r\n      avatar : pic\r\n    })\r\n  })\r\n  .then(checkResponse)\r\n}\r\n\r\nfunction checkResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport {patchUserProfile, getInitialCards, getInfoProfile, postCard, deleteCard, setLikeCard, deleteLikeCard, postAvatar, checkResponse}","import { deleteCard, deleteLikeCard, setLikeCard} from \"./api\";\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst placesList= document.querySelector('.places__list');\r\n\r\nfunction createCard(card, removeCard, handleImageClick, likeCard, userId) {\r\n  const cloneCard = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const cardDeleteButton = cloneCard.querySelector('.card__delete-button');\r\n  const cardImg = cloneCard.querySelector('.card__image');\r\n  const cardTitle = cloneCard.querySelector('.card__title');\r\n  const cardLike = cloneCard.querySelector('.card__like-button');\r\n  const cardLikeCount = cloneCard.querySelector('.card__like-count');\r\n  cardImg.setAttribute('alt', card.name);\r\n  cardImg.setAttribute('src', card.link);\r\n  cardTitle.textContent = card.name;\r\n  cardLikeCount.textContent = card.likes.length;\r\n  card.likes.forEach(function(elem) {\r\n    if (elem['_id'] === userId) {\r\n      return likeCard(cardLike);\r\n    }\r\n  })\r\n  cardImg.addEventListener('click', function() {\r\n    return handleImageClick(card.name, card.link);\r\n  });\r\n  cardLike.addEventListener('click', function () {\r\n    if (cardLike.classList.contains('card__like-button_is-active')) {\r\n      deleteLikeCard(card['_id'])\r\n      .then((card) => {\r\n        cardLikeCount.textContent = card.likes.length;\r\n        return likeCard(cardLike);\r\n      })\r\n      .catch ((err) => console.log('Поймали ошибку! Вот она: ', err.message));\r\n    } else {\r\n      setLikeCard(card['_id'])\r\n      .then((card) => {\r\n        cardLikeCount.textContent = card.likes.length;\r\n        return likeCard(cardLike);\r\n      })\r\n      .catch ((err) => console.log('Поймали ошибку! Вот она: ', err.message));\r\n    }\r\n  })\r\n    if (card.owner['_id'] === userId) {\r\n      cardDeleteButton.addEventListener('click', function() {\r\n        deleteCard(card['_id']) \r\n        .then(() => {\r\n          return removeCard(cloneCard);\r\n        })\r\n        .catch ((err) => console.log('Поймали ошибку! Вот она: ', err.message));\r\n      })\r\n    } else {\r\n      cardDeleteButton.remove();\r\n    };\r\n  return cloneCard;\r\n}\r\n \r\nfunction removeCard (cloneCard) {\r\n  cloneCard.remove();\r\n}\r\n\r\nfunction likeCard(cardLike) {\r\n  cardLike.classList.toggle('card__like-button_is-active');\r\n}\r\n\r\nexport {placesList, createCard, removeCard, likeCard};","function showInputError(validationConfig, formElement, inputElement, errorMessage) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.errorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.inputErrorClass)\r\n}\r\n\r\nfunction hideInputError(validationConfig, formElement, inputElement) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.textContent = '';\r\n\r\n}\r\n\r\nfunction isValid(validationConfig, formElement, inputElement) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(validationConfig,formElement, inputElement, inputElement.validationMessage);\r\n  } else {\r\n    hideInputError(validationConfig, formElement, inputElement);\r\n  }\r\n}\r\n\r\nfunction setEventListeners(validationConfig, formElement) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(validationConfig, inputList, buttonElement);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', () => {\r\n      isValid(validationConfig, formElement, inputElement)\r\n      toggleButtonState(validationConfig, inputList, buttonElement);\r\n    });\r\n  });\r\n}\r\n\r\nfunction enableValidation(validationConfig) {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(validationConfig, formElement);\r\n  });\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  })\r\n}; \r\n\r\nfunction toggleButtonState(validationConfig, inputList, buttonElement) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n}\r\n\r\nfunction clearValidation(validationConfig, formElement) { \r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(validationConfig, formElement, inputElement);\r\n  })\r\n}\r\n\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n}; \r\n\r\nexport {clearValidation, enableValidation, validationConfig}","import '../pages/index.css';\r\nimport * as component from './components.js'\r\nimport {openModal, closeModal} from './modal.js'\r\nimport {placesList, createCard, removeCard, likeCard} from './card.js';\r\nimport {enableValidation, clearValidation, validationConfig} from './validation.js'\r\nimport {getInfoProfile, getInitialCards, patchUserProfile, postCard, postAvatar, checkResponse} from './api.js';\r\nimport { handleSubmit } from './additional.js';\r\n\r\nlet userId;\r\n\r\ncomponent.profileEdit.addEventListener('click', function() {\r\n  openModal(component.popupEdit);\r\n  clearValidation(validationConfig, component.formProfile);\r\n  component.inputName.value = component.profileTitle.textContent;\r\n  component.inputDescription.value = component.profileDescription.textContent;\r\n});\r\n\r\ncomponent.profileAddCard.addEventListener('click', function() {\r\n  openModal(component.popupCard);\r\n  clearValidation(validationConfig, component.formCard);\r\n});\r\n\r\ncomponent.profileImage.addEventListener('click', function() {\r\n  openModal(component.popupAvatar);\r\n  clearValidation(validationConfig, component.formAvatar);\r\n})\r\n\r\ncomponent.popups.forEach(function(popup) {\r\n  popup.addEventListener('click', function(evt) {\r\n    if (evt.target.classList.contains('popup_is-opened')) {\r\n      closeModal(popup);\r\n    } \r\n    if (evt.target.classList.contains('popup__close')) {\r\n      closeModal(popup);\r\n    }\r\n  });\r\n});\r\n\r\ncomponent.formProfile.addEventListener('submit', function(evt) {\r\n  function request() {\r\n    return patchUserProfile(component.inputName.value, component.inputDescription.value)\r\n  .then((card) => {\r\n    component.profileTitle.textContent = card.name;\r\n    component.profileDescription.textContent = card.about;\r\n    })\r\n  .catch ((err) => console.log('Поймали ошибку! Вот она: ', err.message));\r\n  }\r\n  handleSubmit(request,evt);\r\n})\r\n\r\ncomponent.formAvatar.addEventListener('submit', function(evt) {\r\n  function request() {\r\n    return postAvatar(component.inputAvatar.value)\r\n  .then((profile) => component.profileImage.style.backgroundImage = `url(${profile.avatar})`)\r\n  .catch ((err) => console.log('Поймали ошибку! Вот она: ', err.message));\r\n  }\r\n  \r\n  handleSubmit(request, evt);\r\n})\r\n\r\ncomponent.formCard.addEventListener('submit', function(evt) {\r\n  function request() {\r\n    return postCard(component.inputCardName.value, component.inputCardLink.value)\r\n  .then((card) => {\r\n    const newCard = createCard(card, removeCard, handleImageClick, likeCard);\r\n    placesList.prepend(newCard);\r\n    })\r\n  .catch ((err) => console.log('Поймали ошибку! Вот она: ', err.message));\r\n  }\r\n  handleSubmit(request, evt);\r\n});\r\n\r\nfunction handleImageClick(name, link) {\r\n  component.popupPic.src = link;\r\n  component.popupPic.alt = name;\r\n  component.popupCaption.textContent = name;\r\n  openModal(component.popupImg);\r\n};\r\n\r\nenableValidation(validationConfig); \r\n\r\nPromise.all([getInfoProfile(), getInitialCards()]) \r\n  .then(([profile, cards]) => {\r\n    component.profileTitle.textContent = profile.name;\r\n    component.profileDescription.textContent = profile.about;\r\n    component.profileImage.setAttribute('style', `background-image: url(${profile.avatar})`);\r\n    userId = profile['_id'];\r\n    cards.forEach(function(item) {\r\n      const cloneCard = createCard(item, removeCard, handleImageClick, likeCard, userId);\r\n      placesList.append(cloneCard);\r\n    }); \r\n  }).catch ((err) => console.log('Поймали ошибку! Вот она: ', err.message));\r\n  \r\n","import {closeModal} from \"./modal.js\";\r\n\r\nfunction handleSubmit(request, evt) {\r\n    const button = evt.submitter;\r\n    evt.submitter.textContent = 'Сохранить...';\r\n    button.disabled = true;\r\n    button.classList.remove('popup__button_disabled');\r\n    evt.preventDefault()\r\n    const popup = evt.target.closest('.popup')\r\n    const popupForm = popup.querySelector('.popup__form')\r\n\r\n  request()\r\n    .then(() => {\r\n      closeModal(popup)\r\n    })\r\n    .catch((err) => {\r\n      console.error(`Ошибка: ${err}`);\r\n    })\r\n    .finally(() => {\r\n      evt.submitter.textContent = 'Сохранить';\r\n      button.disabled = false;\r\n      popupForm.reset();\r\n    })\r\n}\r\n\r\nexport {handleSubmit}"],"names":["profileEdit","document","querySelector","popupEdit","popupAvatar","popups","querySelectorAll","profileAddCard","popupCard","popupPic","popupImg","popupCaption","formProfile","forms","inputName","name","inputDescription","description","profileTitle","profileDescription","profileImage","formCard","inputCardName","inputCardLink","link","formAvatar","avatar","inputAvatar","openModal","item","classList","add","addEventListener","handleEscPress","evt","key","closeModal","remove","removeEventListener","config","baseUrl","headers","authorization","request","url","options","fetch","concat","checkResponse","res","ok","json","Promise","reject","status","cardTemplate","content","placesList","createCard","card","removeCard","handleImageClick","likeCard","userId","cloneCard","cloneNode","cardDeleteButton","cardImg","cardTitle","cardLike","cardLikeCount","setAttribute","textContent","likes","length","forEach","elem","cardId","contains","method","then","catch","err","console","log","message","setLikeCard","owner","toggle","hideInputError","validationConfig","formElement","inputElement","errorElement","id","errorClass","inputErrorClass","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","Array","from","inputSelector","formSelector","submitButtonSelector","handleSubmit","button","submitter","preventDefault","popup","target","closest","popupForm","error","finally","reset","component","src","alt","value","profileName","profileAbout","body","JSON","stringify","about","pic","profile","style","backgroundImage","cardName","cardLink","newCard","prepend","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation","all","_ref","_ref2","cards","append"],"sourceRoot":""}